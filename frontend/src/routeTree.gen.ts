/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as CategoryImport } from './routes/$category'
import { Route as VendorVendorIDImport } from './routes/vendor.$vendorID'
import { Route as ProductsProductSlugImport } from './routes/products.$productSlug'
import { Route as OrdersOrderIDImport } from './routes/orders.$orderID'
import { Route as ProductsProductSlugEditImport } from './routes/products_.$productSlug.edit'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const CategoryRoute = CategoryImport.update({
  path: '/$category',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const VendorVendorIDRoute = VendorVendorIDImport.update({
  path: '/vendor/$vendorID',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductSlugRoute = ProductsProductSlugImport.update({
  path: '/products/$productSlug',
  getParentRoute: () => rootRoute,
} as any)

const OrdersOrderIDRoute = OrdersOrderIDImport.update({
  path: '/orders/$orderID',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductSlugEditRoute = ProductsProductSlugEditImport.update({
  path: '/products/$productSlug/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/$category': {
      id: '/$category'
      path: '/$category'
      fullPath: '/$category'
      preLoaderRoute: typeof CategoryImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/orders/$orderID': {
      id: '/orders/$orderID'
      path: '/orders/$orderID'
      fullPath: '/orders/$orderID'
      preLoaderRoute: typeof OrdersOrderIDImport
      parentRoute: typeof rootRoute
    }
    '/products/$productSlug': {
      id: '/products/$productSlug'
      path: '/products/$productSlug'
      fullPath: '/products/$productSlug'
      preLoaderRoute: typeof ProductsProductSlugImport
      parentRoute: typeof rootRoute
    }
    '/vendor/$vendorID': {
      id: '/vendor/$vendorID'
      path: '/vendor/$vendorID'
      fullPath: '/vendor/$vendorID'
      preLoaderRoute: typeof VendorVendorIDImport
      parentRoute: typeof rootRoute
    }
    '/products/$productSlug/edit': {
      id: '/products/$productSlug/edit'
      path: '/products/$productSlug/edit'
      fullPath: '/products/$productSlug/edit'
      preLoaderRoute: typeof ProductsProductSlugEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  CategoryRoute,
  ProfileRoute,
  AboutLazyRoute,
  LoginLazyRoute,
  RegisterLazyRoute,
  OrdersOrderIDRoute,
  ProductsProductSlugRoute,
  VendorVendorIDRoute,
  ProductsProductSlugEditRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$category",
        "/profile",
        "/about",
        "/login",
        "/register",
        "/orders/$orderID",
        "/products/$productSlug",
        "/vendor/$vendorID",
        "/products/$productSlug/edit"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/$category": {
      "filePath": "$category.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/orders/$orderID": {
      "filePath": "orders.$orderID.tsx"
    },
    "/products/$productSlug": {
      "filePath": "products.$productSlug.tsx"
    },
    "/vendor/$vendorID": {
      "filePath": "vendor.$vendorID.tsx"
    },
    "/products/$productSlug/edit": {
      "filePath": "products_.$productSlug.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
